// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.kotlin.oneof.OneOfMessage in one_of.proto
package com.squareup.wire.protos.kotlin

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.OneOf
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import okio.ByteString
import kotlin.jvm.JvmField

/**
 * It's a one of message.
 */
public class OneOfMessage2(
  val choice: OneOf<Choice<*>, *>? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<OneOfMessage2, Nothing>(ADAPTER, unknownFields) {

  class Choice<T>(
    tag: Int,
    adapter: ProtoAdapter<T>,
    declaredName: String,
  ) : OneOf.Key<T>(tag, adapter, declaredName) {
    fun create(value: T) = OneOf(this, value)

    fun decode(reader: ProtoReader): OneOf<Choice<T>, T> {
      val value = adapter.decode(reader)
      return create(value)
    }
  }

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  public override fun newBuilder(): Nothing = throw AssertionError()

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is OneOfMessage2) return false
    if (unknownFields != other.unknownFields) return false
    if (choice != other.choice) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + choice.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (choice !=null) result += """choice=${choice?.toString()}"""
    return result.joinToString(prefix = "OneOfMessage{", separator = ", ", postfix = "}")
  }

  public fun copy(
    choice: OneOf<Choice<*>, *>? = this.choice,
    unknownFields: ByteString = this.unknownFields
  ): OneOfMessage2 = OneOfMessage2(choice, unknownFields)

  public companion object {
    val choiceFoo = Choice<Int>(tag = 1, adapter = ProtoAdapter.INT32, declaredName = "foo")
    val choiceBar = Choice<String>(tag = 3, adapter = ProtoAdapter.STRING, declaredName = "bar")
    val choiceBaz = Choice<String>(tag = 4, adapter = ProtoAdapter.STRING, declaredName = "baz")
    val choiceKeys = setOf(choiceFoo, choiceBar, choiceBaz)

    @JvmField
    public val ADAPTER: ProtoAdapter<OneOfMessage2> = object : ProtoAdapter<OneOfMessage2>(
      FieldEncoding.LENGTH_DELIMITED,
      OneOfMessage2::class,
      "type.googleapis.com/squareup.protos.kotlin.oneof.OneOfMessage",
      PROTO_2,
      null
    ) {
      public override fun encodedSize(value: OneOfMessage2): Int {
        var size = value.unknownFields.size
        if (value.choice != null) {
          size += value.choice.encodedSizeWithTag()
        }
        return size
      }

      public override fun encode(writer: ProtoWriter, value: OneOfMessage2): Unit {
        if (value.choice != null) {
          value.choice.encodeWithTag(writer)
        }
        writer.writeBytes(value.unknownFields)
      }

      public override fun decode(reader: ProtoReader): OneOfMessage2 {
        var choice: OneOf<Choice<*>, *>? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            else -> {
              for (choiceKey in choiceKeys) {
                if (tag == choiceKey.tag) {
                  choice = choiceKey.decode(reader)
                  return@forEachTag Unit
                }
              }
              reader.readUnknownField(tag)
            }
          }
        }
        return OneOfMessage2(
          choice = choice,
          unknownFields = unknownFields
        )
      }

      public override fun redact(value: OneOfMessage2): OneOfMessage2 = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
